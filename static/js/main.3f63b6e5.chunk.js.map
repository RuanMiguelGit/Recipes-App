{"version":3,"sources":["context/index.js","components/InputPassword.js","components/InputText.js","lib/utils.js","services/localStorage.js","pages/Login/index.js","pages/NotFound.js","components/animation/Loading.js","components/Cards/RecipeCard/index.js","components/Cards/RecipeCardsContainer/index.js","components/Footer.js","components/SearchButton.js","components/Header.js","components/InputRadio.js","services/apiRequest.js","hooks/index.js","components/Searchbar.js","lib/ActiveButtons.js","components/Selectors/CategoriesSelector/index.js","pages/MainFoods.js","pages/MainDrinks.js","components/ButtonLink.js","pages/Explorer.js","components/ExplorefoodsButton.js","pages/ExplorerFods.js","components/ExploreDrinksButton.js","pages/ExplorerDrinks.js","components/Cards/IngredientCardsContainer/index.js","pages/ExploreByIngredients/index.js","components/DropDown.js","pages/Origin.js","components/SmallHolder.js","pages/Profile.js","components/DoneAndFavRecipes/Filter.js","components/DoneAndFavRecipes/DoneRecipe.js","components/DoneAndFavRecipes/FavRecipe.js","components/DoneAndFavRecipes/RecipesContainer.js","pages/RecipesDone.js","pages/RecipesFav.js","components/RecomendationsCarousel/index.js","components/FavoriteButton/index.js","pages/DetailsFood/index.js","pages/DetailsDrink/index.js","pages/FoodInProgress/index.js","pages/DrinkInProgress/index.js","App.js","serviceWorker.js","index.js","images/shareIcon.svg","images/blackHeartIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/logo.svg","images/NotfoundIcon.svg","images/loading.svg","images/whiteHeartIcon.svg"],"names":["Context","createContext","ContextProvider","children","useState","hideSearchBar","setHideSearchBar","apiData","setApiData","apiCategories","setApiCategories","apiName","setApiName","filteredRecipes","setFilteredRecipes","filteredName","setFilteredName","RandomFood","setRandomFood","obj","value","set","cat","category","filter","strCategory","nam","name","strArea","Provider","InputPassword","label","updateState","fullWidth","showPassword","setShowPassword","FormControl","InputLabel","htmlFor","Input","id","inputProps","type","onChange","evt","target","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","event","preventDefault","Visibility","VisibilityOff","defaultProps","InputText","variant","size","TextField","required","DateFormatter","now","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","checkProgressRecipes","inProgressRecipes","JSON","parse","localStorage","getItem","result","Object","keys","meals","find","key","toString","cocktails","removeDoneFromInProgress","setItem","stringify","checkDoneRecipes","doneRecipes","mixedRecipe","recipe","saveDoneRecipe","newDone","idMeal","area","alcoholicOrNot","strMeal","image","strMealThumb","doneDate","tags","strTags","replace","split","idDrink","strAlcoholic","strDrink","strDrinkThumb","push","removeFavoritedRecipe","updateInProgressRecipe","ingredient","includes","item","getInProcessRecipe","Login","email","setEmail","password","setPassword","disableSubmit","setDisableSubmit","redirect","setRedirect","useEffect","userEmail","length","RegExp","join","test","to","Grid","container","justify","alignItems","className","xs","Card","component","src","logo","alt","Button","data-testid","disabled","e","localStorageUser","saveUserEmailInLocalStorage","NotFound","NotfoundIcon","Loading","loadingimg","RecipeCard","title","thumbnail","index","clickRedirectPath","cardType","history","useHistory","sm","md","lg","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","RecipeCardsContainer","cardsInfos","maxCards","food","redirectPath","idName","drink","slice","map","card","Footer","foodClass","AppBar","color","style","top","bottom","Toolbar","drinksIcon","exploreIcon","mealIcon","SearchButton","useContext","searchicon","Header","Show","profileIcons","InputRadio","classes","FormControlLabel","control","Radio","getApiData","endPoint","a","endPointPattern","recipeKey","fetch","then","resp","json","data","catch","console","log","useVerifyNoOrSingleDish","dishType","dishPath","alert","Searchbar","radioValue","setRadioValue","search","setSearch","shouldAlert","setShouldAlert","searchBtnClass","radioClass","radioColor","Paper","elevation","direction","RadioGroup","row","ActiveButtons","parentSelector","this","buttons","document","querySelectorAll","classList","add","forEach","btn","remove","getAttribute","parentElement","CategoriesSelector","recipeType","currentFilter","setCurrentFilter","handleActiveButtons","init","handleClick","textContent","spacing","MainFoods","loading","setLoading","useParams","request","MainDrinks","ButtonLink","func","LinkT","datatest","Box","m","Explorer","href","ExplorefoodsButton","ExplorerFods","ExploreDrinksButton","ExplorerDrinks","IngredientCardsContainer","URL","ExploreByIngredients","drinksOrFoods","CategoryDropDownSelector","currentFilterName","setcurrentFilterName","margin","Origin","SmallHolder","display","Profile","user","getUserEmail","clear","Filter","filterContent","ButtonGroup","DoneRecipe","showAlert","setShowAlert","recipePath","pushToRecipePath","copyToClipBoard","window","location","protocol","host","navigator","clipboard","writeText","setTimeout","maxWidth","shareIcon","width","wrap","tag","tagIndex","Chip","Collapse","in","Alert","onClose","FavRecipe","removeFav","favIcon","RecipesContainer","recipes","updatedRecipes","Recipe","RecipesDone","getDoneRecipes","setFilter","RecipesFav","favRecipes","favoriteRecipes","getFavoriteRecipes","setFavoriteRecipes","updatedFavRecipes","RecomendationsCarousel","recomendations","receipe","FavoriteButton","favorited","setFavorited","checkFavoriteRecipes","blackHeartIcon","newFavorite","saveFavoriteRecipe","whiteHeartIcon","DetailsFood","recipeDetails","setRecipeDetails","setRecomendations","bottomButtonText","setBottomButtonText","copiedLink","setCopiedLink","recipeDetailsURL","fetchData","url","callback","response","results","drinks","Share","List","arrayOfIngredients","measure","prop","ingredientsList","ingredientAndMeasure","ListItem","ListItemText","primary","secondary","strInstructions","link","videoId","embedVideoLink","strYoutube","DetailsDrink","FoodInProgress","usedIngredients","setUsedIngredients","finishButton","setFinishButton","Checkbox","checked","App","exact","path","DrinkInProgress","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3f63b6e5.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport const Context = createContext();\n\nconst ContextProvider = ({ children }) => {\n  const [hideSearchBar, setHideSearchBar] = useState(true);\n  const [apiData, setApiData] = useState({});\n  const [apiCategories, setApiCategories] = useState([]);\n  const [apiName, setApiName] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [filteredName, setFilteredName] = useState([]);\n  const [RandomFood, setRandomFood] = useState('');\n\n  const filterByCategory = (category) => {\n    if (category) return (apiData.filter(({ strCategory }) => strCategory === category));\n    return [];\n  };\n\n  const filterByName = (name) => {\n    if (name) return (apiData.filter(({ strArea }) => strArea === name));\n    return [];\n  };\n\n  const obj = {\n    hideSearchBar: { value: hideSearchBar, set: setHideSearchBar },\n    apiData: { value: apiData, set: setApiData },\n    RandomFood: { value: RandomFood, set: setRandomFood },\n    apiCategories: { value: apiCategories, set: setApiCategories },\n    apiName: { value: apiName, set: setApiName },\n    filteredRecipes: {\n      value: filteredRecipes, set: (cat) => setFilteredRecipes(filterByCategory(cat)),\n    },\n    filteredName: {\n      value: filteredName, set: (nam) => setFilteredName(filterByName(nam)),\n    },\n  };\n  return (\n    <Context.Provider value={ obj }>\n      { children }\n    </Context.Provider>\n  );\n};\n\nContextProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default ContextProvider;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormControl, IconButton, Input, InputAdornment, InputLabel } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\nconst InputPassword = ({\n  name, label, updateState, value, fullWidth,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => { event.preventDefault(); };\n\n  return (\n\n    <FormControl fullWidth={ fullWidth }>\n      <InputLabel htmlFor={ name }>{label}</InputLabel>\n      <Input\n        id={ name }\n        inputProps={ { 'data-testid': name } }\n        type={ showPassword ? 'text' : 'password' }\n        value={ value }\n        onChange={ (evt) => updateState(evt.target.value) }\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={ handleShowPassword }\n              onMouseDown={ handleMouseDownPassword }\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n  );\n};\n\nInputPassword.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  updateState: PropTypes.func.isRequired,\n  fullWidth: PropTypes.bool,\n};\n\nInputPassword.defaultProps = {\n  fullWidth: false,\n};\n\nexport default InputPassword;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nconst InputText = ({\n  name, label, updateState, value, variant, size, fullWidth, type,\n}) => (\n  <TextField\n    fullWidth={ fullWidth }\n    variant={ variant }\n    size={ size }\n    id={ name }\n    label={ label }\n    type={ type }\n    value={ value }\n    onChange={ (evt) => updateState(evt.target.value) }\n    inputProps={ { 'data-testid': name } }\n    required\n  />\n);\n\nInputText.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  updateState: PropTypes.func.isRequired,\n  variant: PropTypes.string,\n  size: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nInputText.defaultProps = {\n  variant: 'standard',\n  size: 'medium',\n  fullWidth: false,\n  type: 'text',\n};\n\nexport default InputText;\n","const DateFormatter = {\n  now() {\n    // Solution to get the date found at: https://stackoverflow.com/questions/1531093/how-do-i-get-the-current-date-in-javascript\n    let today = new Date();\n    const dd = String(today.getDate()).padStart(2, '0');\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0!\n    const yyyy = today.getFullYear();\n\n    today = `${mm}/${dd}/${yyyy}`;\n    return today;\n  },\n};\n\nexport default DateFormatter;\n","import DateFormatter from '../lib/utils';\n\nexport const initializeLocalStorageTokens = () => {\n  // Here is already created and commented the logic to check if those localStorage keys already exist\n  // const storageMealsToken = localStorage.getItem('mealsToken');\n  // const storageCocktailsToken = localStorage.getItem('cocktailsToken');\n  // if (!storageMealsToken && !storageCocktailsToken) {\n  localStorage.setItem('mealsToken', 1);\n  localStorage.setItem('cocktailsToken', 1);\n  // }\n};\n\nexport const saveUserEmailInLocalStorage = (email) => {\n  const localStorageUser = JSON.stringify({ email });\n  localStorage.setItem('user', localStorageUser);\n};\n\nexport const getUserEmail = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.email) return user.email;\n  return '';\n};\n\nexport const getDoneRecipes = () => {\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (!doneRecipes) return [];\n  return doneRecipes;\n};\n\nexport const checkProgressRecipes = (type, id) => {\n  const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  let result = '';\n  if (inProgressRecipes) {\n    switch (type) {\n    case 'meal':\n      result = Object.keys(inProgressRecipes.meals)\n        .find((key) => key.toString() === id);\n      break;\n    case 'cocktail':\n      result = Object.keys(inProgressRecipes.cocktails)\n        .find((key) => key.toString() === id);\n      break;\n    default:\n      result = '';\n    }\n  }\n  return result;\n};\n\nexport const removeDoneFromInProgress = (type, id) => {\n  const { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (type === 'meal') {\n    delete meals[id];\n  }\n  if (type === 'drink') {\n    delete cocktails[id];\n  }\n  localStorage.setItem('inProgressRecipes', JSON.stringify({\n    cocktails,\n    meals,\n  }));\n};\n\nexport const checkDoneRecipes = (type, id) => {\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const result = doneRecipes\n    ? doneRecipes\n      .filter((mixedRecipe) => mixedRecipe.type === type)\n      .find((recipe) => recipe.id.toString() === id)\n    : '';\n  return result;\n};\n\nexport const saveDoneRecipe = (recipe) => {\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  let newDone;\n  if (recipe.idMeal) {\n    newDone = {\n      id: recipe.idMeal,\n      type: 'meal',\n      area: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe.strMeal,\n      image: recipe.strMealThumb,\n      doneDate: DateFormatter.now(),\n      tags: recipe.strTags ? recipe.strTags.replace(/\"/g, '').split(',') : [],\n    };\n    removeDoneFromInProgress('meal', recipe.idMeal);\n  } else {\n    newDone = {\n      id: recipe.idDrink,\n      type: 'drink',\n      area: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe.strDrink,\n      image: recipe.strDrinkThumb,\n      doneDate: DateFormatter.now(),\n      tags: recipe.strTags ? recipe.strTags.replace(/\"/g, '').split(',') : [],\n    };\n    removeDoneFromInProgress('drink', recipe.idDrink);\n  }\n  if (doneRecipes) {\n    doneRecipes.push(newDone);\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n  } else localStorage.setItem('doneRecipes', JSON.stringify([newDone]));\n};\n\nexport const checkFavoriteRecipes = (type, id) => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const result = favoriteRecipes\n    ? favoriteRecipes\n      .filter((mixedRecipe) => mixedRecipe.type === type)\n      .find((recipe) => recipe.id.toString() === id)\n    : '';\n  return result;\n};\n\nexport const saveFavoriteRecipe = (recipe) => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const newFavorite = recipe.idMeal\n    ? {\n      id: recipe.idMeal,\n      type: 'comida',\n      area: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe.strMeal,\n      image: recipe.strMealThumb,\n    }\n    : {\n      id: recipe.idDrink,\n      type: 'bebida',\n      area: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe.strDrink,\n      image: recipe.strDrinkThumb,\n    };\n  if (favoriteRecipes) {\n    favoriteRecipes.push(newFavorite);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  } else localStorage.setItem('favoriteRecipes', JSON.stringify([newFavorite]));\n};\n\nexport const getFavoriteRecipes = () => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (!favoriteRecipes) return [];\n  return favoriteRecipes;\n};\n\nexport const removeFavoritedRecipe = (id) => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const result = favoriteRecipes.filter((recipe) => recipe.id !== id);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(result));\n};\n\nexport const updateInProgressRecipe = (type, id, ingredient) => {\n  const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (inProgressRecipes[type][id]) {\n    if (inProgressRecipes[type][id].includes(ingredient)) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        ...inProgressRecipes,\n        [type]: {\n          ...inProgressRecipes[type],\n          [id]: inProgressRecipes[type][id].filter((item) => item !== ingredient),\n        },\n      }));\n    } else {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        ...inProgressRecipes,\n        [type]: {\n          ...inProgressRecipes[type],\n          [id]: [...inProgressRecipes[type][id], ingredient],\n        },\n      }));\n    }\n  } else {\n    localStorage.setItem('inProgressRecipes', JSON.stringify({\n      ...inProgressRecipes,\n      [type]: {\n        ...inProgressRecipes[type],\n        [id]: [ingredient],\n      },\n    }));\n  }\n};\n\nexport const getInProcessRecipe = (type, id) => {\n  const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (!inProgressRecipes) {\n    localStorage.setItem('inProgressRecipes', JSON.stringify({\n      cocktails: {},\n      meals: {},\n    }));\n    return [];\n  }\n  if (inProgressRecipes[type][id]) {\n    return inProgressRecipes[type][id];\n  }\n  return [];\n};\n","import React, { useEffect, useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router';\nimport InputPassword from '../../components/InputPassword';\nimport InputText from '../../components/InputText';\nimport './styles.css';\nimport {\n  initializeLocalStorageTokens,\n  saveUserEmailInLocalStorage } from '../../services/localStorage';\nimport logo from '../../images/logo.svg';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disableSubmit, setDisableSubmit] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  // Following RegEx found at: https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n  // I had to split the RegEx to fix the linter issues. I've found how to solve it here:\n  // https://stackoverflow.com/questions/12317049/how-to-split-a-long-regular-expression-into-multiple-lines-in-javascript\n  const validEmail = (userEmail) => {\n    const emailRegex = new RegExp([\n      '^(([^<>()[\\\\]\\\\.,;:\\\\s@\\\\\"]+(\\\\.[^<>()',\n      '[\\\\]\\\\.,;:\\\\s@\\\\\"]+)*)|(\\\\\".+\\\\\"))@(([^<>()',\n      '[\\\\]\\\\.,;:\\\\s@\\\\\"]+\\\\.)+[^<>()[\\\\]\\\\.,;:\\\\s@\\\\\"]{2,})$',\n    ].join(''));\n    return emailRegex.test(userEmail);\n  };\n  useEffect(() => {\n    const MINIMAL_PASSWORD_LENGTH = 6;\n    if (password.length > MINIMAL_PASSWORD_LENGTH && validEmail(email)) {\n      setDisableSubmit(false);\n    } else {\n      setDisableSubmit(true);\n    }\n  }, [password, email]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    initializeLocalStorageTokens();\n    saveUserEmailInLocalStorage(email);\n    setRedirect(true);\n  };\n\n  return (\n    <>\n      { redirect && <Redirect to=\"/comidas\" /> }\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className=\"root-login\"\n      >\n        <Grid item xs={ 10 }>\n          <Card component=\"form\" className=\"card-login\">\n            <img src={ logo } alt=\"Logo\" />\n            <InputText\n              label=\"Email\"\n              name=\"email-input\"\n              type=\"email\"\n              value={ email }\n              updateState={ setEmail }\n              fullWidth\n            />\n            <InputPassword\n              label=\"Password\"\n              name=\"password-input\"\n              value={ password }\n              fullWidth\n              updateState={ setPassword }\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              data-testid=\"login-submit-btn\"\n              disabled={ disableSubmit }\n              onClick={ handleSubmit }\n            >\n              Login\n            </Button>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport './Notfound.css';\nimport NotfoundIcon from '../images/NotfoundIcon.svg';\n\nconst NotFound = () => (\n  <div>\n    <h1 className=\"notfound\">Not Found</h1>\n    <img className=\"notFoundpic\" src={ NotfoundIcon } alt=\"Logo\" />\n\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport loadingimg from '../../images/loading.svg';\n\nconst Loading = () => (\n  <img className=\"loading-data-animation\" src={ loadingimg } alt=\"Loading\" />\n);\n\nexport default Loading;\n","import {\n  Card, CardActionArea, CardContent, CardMedia, Grid, Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport { useHistory } from 'react-router-dom';\n\nconst RecipeCard = ({ title, thumbnail, index, clickRedirectPath, cardType }) => {\n  const history = useHistory();\n\n  return (\n    <Grid item xs={ 6 } sm={ 4 } md={ 3 } lg={ 2 }>\n      <Card\n        data-testid={ `${index}-${cardType}-card` }\n        className=\"recipe-card\"\n        onClick={ () => history.push(clickRedirectPath) }\n      >\n        <CardActionArea>\n          <CardMedia\n            data-testid={ `${index}-card-img` }\n            component=\"img\"\n            image={ thumbnail }\n            src={ thumbnail }\n            title={ title }\n          />\n        </CardActionArea>\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n            data-testid={ `${index}-card-name` }\n          >\n            {title}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\nRecipeCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  clickRedirectPath: PropTypes.string.isRequired,\n  cardType: PropTypes.string.isRequired,\n};\nexport default RecipeCard;\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeCard from '../RecipeCard';\n\nimport './styles.css';\n\nconst RecipeCardsContainer = ({ cardsInfos, cardType, maxCards }) => {\n  const cardTypes = {\n    food: {\n      image: 'strMealThumb',\n      name: 'strMeal',\n      redirectPath: '/comidas',\n      idName: 'idMeal',\n    },\n    drink: {\n      image: 'strDrinkThumb',\n      name: 'strDrink',\n      redirectPath: '/bebidas',\n      idName: 'idDrink',\n    },\n  };\n\n  const cardsToRender = () => {\n    if (!cardsInfos) return [];\n    if (cardsInfos.length > maxCards) return cardsInfos.slice(0, maxCards);\n    return cardsInfos;\n  };\n\n  const { image, name, redirectPath, idName } = cardTypes[cardType];\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      className=\"recipe-cards-container\"\n    >\n      {cardsToRender().map((card, index) => (\n\n        <RecipeCard\n          key={ index }\n          title={ card[name] }\n          thumbnail={ card[image] }\n          index={ index }\n          clickRedirectPath={ `${redirectPath}/${card[idName]}` }\n          cardType=\"recipe\"\n        />\n      ))}\n    </Grid>\n  );\n};\n\nRecipeCardsContainer.propTypes = {\n  cardsInfos: PropTypes.arrayOf(PropTypes.object),\n  cardType: PropTypes.string.isRequired,\n  maxCards: PropTypes.number.isRequired,\n};\n\nRecipeCardsContainer.defaultProps = {\n  cardsInfos: [],\n};\n\nexport default RecipeCardsContainer;\n","import { AppBar, Toolbar, Button } from '@material-ui/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport drinksIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport './MainHeader.css';\n\nconst Footer = ({ foodClass }) => (\n  <AppBar\n    data-testid=\"footer\"\n    position=\"fixed\"\n    color=\"primary\"\n    style={ { top: 'auto',\n      bottom: 0 } }\n  >\n    <Toolbar className={ foodClass }>\n      <Link to=\"/bebidas\">\n        <Button src={ drinksIcon } type=\"button\" data-testid=\"drinks-bottom-btn\">\n          <img src={ drinksIcon } alt=\"drinksIcon\" />\n        </Button>\n      </Link>\n      <Link to=\"/explorar\">\n        <Button src={ exploreIcon } type=\"button\" data-testid=\"explore-bottom-btn\">\n          <img src={ exploreIcon } alt=\"exploreIcon\" />\n        </Button>\n      </Link>\n      <Link to=\"/comidas\">\n        <Button src={ mealIcon } type=\"button\" data-testid=\"food-bottom-btn\">\n          <img src={ mealIcon } alt=\"mealIcon\" />\n        </Button>\n      </Link>\n    </Toolbar>\n  </AppBar>\n\n);\n\nFooter.propTypes = {\n  foodClass: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport searchicon from '../images/searchIcon.svg';\nimport { Context } from '../context';\n\nconst SearchButton = () => {\n  const { hideSearchBar: { value, set } } = useContext(Context);\n\n  return (\n    <Button\n      src={ searchicon }\n      onClick={ () => set(!value) }\n      type=\"button\"\n      data-testid=\"search-top-btn\"\n    >\n      <img src={ searchicon } alt=\"searchIcon\" />\n    </Button>\n  );\n};\n\nexport default SearchButton;\n","import { AppBar, Toolbar, Button, Typography } from '@material-ui/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport profileIcons from '../images/profileIcon.svg';\nimport './MainHeader.css';\nimport SearchButton from './SearchButton';\n\nconst Header = ({ name, foodClass, Show }) => {\n  const history = useHistory();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={ foodClass }>\n        <Button\n          type=\"button\"\n          onClick={ () => history.push('/perfil') }\n          data-testid=\"profile-top-btn\"\n          src={ profileIcons }\n        >\n          <img src={ profileIcons } alt=\"profileIcon\" />\n        </Button>\n        <Typography variant=\"h6\" data-testid=\"page-title\">{name}</Typography>\n\n        {\n          (Show ? <SearchButton />\n            : <Button />)\n        }\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  foodClass: PropTypes.string.isRequired,\n  Show: PropTypes.bool.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n\nconst InputRadio = ({ name, label, value, classes, color }) => (\n  <FormControlLabel\n    value={ value }\n    label={ label }\n    control={\n      <Radio\n        color={ color }\n        inputProps={ { 'data-testid': name } }\n        className={ classes }\n      />\n    }\n  />\n);\n\nInputRadio.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  classes: PropTypes.string,\n  color: PropTypes.string,\n};\n\nInputRadio.defaultProps = {\n  classes: '',\n  color: 'secondary',\n};\n\nexport default InputRadio;\n","export const EpCategories = 'list.php?c=list';\nexport const EpAllRecipes = 'search.php?s=';\nexport const EpRecipesByFirstLetter = 'search.php?f=';\nexport const EpRecipesByCategory = 'filter.php?c=';\nexport const EpIngredients = 'list.php?i=list';\nexport const EpRecipesByIngredients = 'filter.php?i=';\nexport const EpRecipesByAreas = 'filter.php?a=';\nexport const EpRecipesByArea = 'list.php?a=list';\n\nconst getApiData = async (type, endPoint, value = '') => {\n  const requestPattern = {\n    food: {\n      endPointPattern: 'https://www.themealdb.com/api/json/v1/1/',\n      recipeKey: 'meals',\n    },\n    drink: {\n      endPointPattern: 'https://www.thecocktaildb.com/api/json/v1/1/',\n      recipeKey: 'drinks',\n    },\n  };\n  const { endPointPattern, recipeKey } = requestPattern[type];\n\n  return fetch(`${endPointPattern}${endPoint}${value}`)\n    .then((resp) => resp.json())\n    .then((data) => data[recipeKey])\n    .catch(console.log);\n};\n\nexport default getApiData;\n","/* eslint-disable no-alert */\nimport { useEffect } from 'react';\n\nconst useVerifyNoOrSingleDish = (data, dishType, history) => {\n  useEffect(() => {\n    if (data && data.length === 1) {\n      const dishPath = dishType === 'meals' ? 'comidas' : 'bebidas';\n      const id = dishType === 'meals' ? data[0].idMeal\n        : data[0].idDrink;\n\n      history.push(`/${dishPath}/${id}`);\n    }\n    if (data === null) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n  }, [data, history, dishType]);\n};\n\nexport default useVerifyNoOrSingleDish;\n","/* eslint-disable no-alert */\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Paper, Grid, RadioGroup, Button } from '@material-ui/core';\nimport InputText from './InputText';\nimport InputRadio from './InputRadio';\nimport { Context } from '../context';\nimport getApiData from '../services/apiRequest';\nimport './Search.css';\nimport useVerifyNoOrSingleDish from '../hooks';\n\nconst Searchbar = ({ type }) => {\n  const history = useHistory();\n  const { apiData } = useContext(Context);\n  const [radioValue, setRadioValue] = useState('filter.php?i=');\n  const [search, setSearch] = useState('');\n  const [shouldAlert, setShouldAlert] = useState(false);\n\n  const dishType = type === 'food' ? 'meals' : 'drinks';\n  const searchBtnClass = type === 'food' ? 'search-btn food-search'\n    : 'search-btn drink-search';\n  const radioClass = type === 'food' ? '' : 'radio-search-drink';\n  const radioColor = type === 'food' ? 'secondary' : 'primary';\n\n  const radioChange = (evt) => {\n    setRadioValue(evt.target.value);\n  };\n\n  useEffect(() => {\n    if (search.length > 1 && radioValue === 'search.php?f=') {\n      setShouldAlert(true);\n    } else {\n      setShouldAlert(false);\n    }\n  }, [search, radioValue, setShouldAlert]);\n\n  const handleSearch = () => {\n    if (shouldAlert) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else {\n      getApiData(type, `${radioValue}${search}`)\n        .then((data) => apiData.set(data));\n    }\n  };\n\n  useVerifyNoOrSingleDish(apiData.value, dishType, history);\n\n  return (\n    <Paper elevation={ 10 } variant=\"elevation\">\n      <Grid container component=\"form\" className=\"search-bar\" direction=\"column\">\n        <InputText\n          fullWidth\n          id=\"Search\"\n          label=\"Search\"\n          size=\"small\"\n          name=\"search-input\"\n          variant=\"filled\"\n          value={ search }\n          updateState={ setSearch }\n        />\n        <RadioGroup\n          aria-label=\"search-type\"\n          value={ radioValue }\n          onChange={ radioChange }\n          row\n          className=\"search-radio-group\"\n        >\n          <InputRadio\n            name=\"ingredient-search-radio\"\n            value=\"filter.php?i=\"\n            label=\"Ingrediente\"\n            color={ radioColor }\n            classes={ radioClass }\n          />\n          <InputRadio\n            name=\"name-search-radio\"\n            value=\"search.php?s=\"\n            label=\"Nome\"\n            color={ radioColor }\n            classes={ radioClass }\n          />\n          <InputRadio\n            name=\"first-letter-search-radio\"\n            value=\"search.php?f=\"\n            label=\"Primeira letra\"\n            color={ radioColor }\n            classes={ radioClass }\n          />\n        </RadioGroup>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          className={ searchBtnClass }\n          data-testid=\"exec-search-btn\"\n          onClick={ handleSearch }\n        >\n          Search\n        </Button>\n      </Grid>\n    </Paper>\n  );\n};\n\nSearchbar.propTypes = {\n  type: PropTypes.string,\n};\n\nSearchbar.defaultProps = {\n  type: 'food',\n};\n\nexport default Searchbar;\n","const ACTIVE_BUTTON = 'active-button';\n\n// const activeButton = {\n//   init: (parentSelector, type) => {\n//     const buttons = document.querySelectorAll(`${parentSelector} button`);\n//     buttons[0].classList.add(`${ACTIVE_BUTTON}-${type}`);\n//   },\n//   onClick: (parentSelector, type) => {\n//     const activeButtons = document.querySelectorAll('.selector-grid button');\n//     activeButtons.forEach((btn) => {\n//       btn.classList.remove(`${ACTIVE_BUTTON}-${recipeType}`);\n//     });\n\n//     if (e.target.getAttribute('class') === 'MuiButton-label') {\n//       const button = e.target.parentElement;\n//       button.classList.add(`${ACTIVE_BUTTON}-${recipeType}`);\n//     } else {\n//       e.target.classList.add(`${ACTIVE_BUTTON}-${recipeType}`);\n//     }\n//   },\n// };\n\nclass ActiveButtons {\n  constructor(parentSelector, type) {\n    this.buttons = `${parentSelector} button`;\n    this.className = `${ACTIVE_BUTTON}-${type}`;\n  }\n\n  init() {\n    document.querySelectorAll(this.buttons)[0].classList.add(this.className);\n  }\n\n  onClick(evt) {\n    document.querySelectorAll(this.buttons)\n      .forEach((btn) => { btn.classList.remove(this.className); });\n\n    if (evt.target.getAttribute('class') === 'MuiButton-label') {\n      evt.target.parentElement.classList.add(this.className);\n    } else {\n      evt.target.classList.add(this.className);\n    }\n  }\n}\n\nexport default ActiveButtons;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Grid } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../../context';\nimport getApiData,\n{ EpAllRecipes, EpCategories, EpRecipesByCategory } from '../../../services/apiRequest';\nimport './styles.css';\nimport ActiveButtons from '../../../lib/ActiveButtons';\n\nconst CategoriesSelector = ({ recipeType }) => {\n  const { apiCategories, filteredRecipes, apiData } = useContext(Context);\n  const [currentFilter, setCurrentFilter] = useState('');\n  const handleActiveButtons = new ActiveButtons('.selector-grid', recipeType);\n\n  useEffect(() => {\n    getApiData(recipeType, EpCategories).then((data) => { apiCategories.set(data); });\n\n    handleActiveButtons.init();\n\n    return () => { apiCategories.set([]); };\n  }, []);\n\n  const handleClick = (e) => {\n    if (e.target.textContent === currentFilter || e.target.textContent === 'All') {\n      setCurrentFilter('');\n      getApiData(recipeType, EpAllRecipes).then((data) => {\n        apiData.set(data);\n      });\n      filteredRecipes.set([]);\n    } else {\n      setCurrentFilter(e.target.textContent);\n      getApiData(recipeType, EpRecipesByCategory, e.target.textContent)\n        .then((data) => apiData.set(data));\n    }\n    handleActiveButtons.onClick(e);\n  };\n\n  const CATEGORIES_AMOUNT = 5;\n\n  return (\n    <Grid container spacing={ 1 } className=\"selector-grid\">\n      <Grid item xs={ 4 } sm={ 2 }>\n        <Button\n          variant=\"contained\"\n          fullWidth\n          value=\"All\"\n          onClick={ handleClick }\n          data-testid=\"All-category-filter\"\n          size=\"small\"\n          className={ recipeType === 'drink' ? 'drink-button' : '' }\n        >\n          All\n        </Button>\n      </Grid>\n      {apiCategories.value && apiCategories.value.slice(0, CATEGORIES_AMOUNT)\n        .map(({ strCategory }) => (\n          <Grid item key={ strCategory } xs={ 4 } sm={ 2 }>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              key={ strCategory }\n              value={ strCategory }\n              onClick={ handleClick }\n              data-testid={ `${strCategory}-category-filter` }\n              size=\"small\"\n              className={ recipeType === 'drink' ? 'drink-button' : '' }\n            >\n\n              {strCategory}\n\n            </Button>\n          </Grid>\n        ))}\n\n    </Grid>\n\n  );\n};\n\nCategoriesSelector.propTypes = {\n  recipeType: PropTypes.string.isRequired,\n};\n\nexport default CategoriesSelector;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Loading from '../components/animation/Loading';\nimport RecipeCardsContainer from '../components/Cards/RecipeCardsContainer';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Searchbar from '../components/Searchbar';\nimport CategoriesSelector from '../components/Selectors/CategoriesSelector';\nimport { Context } from '../context';\nimport getApiData, { EpAllRecipes, EpRecipesByIngredients } from '../services/apiRequest';\n\nconst MainFoods = () => {\n  const { apiData, hideSearchBar, filteredRecipes } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  const { filter } = useParams();\n\n  useEffect(() => {\n    hideSearchBar.set(true);\n\n    const request = filter\n      ? ['food', EpRecipesByIngredients, filter]\n      : ['food', EpAllRecipes];\n\n    getApiData(...request).then((data) => {\n      apiData.set(data);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n\n    <div>\n      <Header\n        name=\"Comidas\"\n        foodClass=\"main-food\"\n        Show\n      />\n      { !hideSearchBar.value && <Searchbar />}\n      {!loading && <CategoriesSelector recipeType=\"food\" />}\n      { loading ? <Loading /> : (<RecipeCardsContainer\n        cardsInfos={\n          filteredRecipes.value.length > 0\n            ? filteredRecipes.value\n            : apiData.value\n        }\n        cardType=\"food\"\n        maxCards={ 12 }\n      />\n      )}\n      <Footer\n        foodClass=\"main-food-footer\"\n      />\n    </div>\n\n  );\n};\n\nexport default MainFoods;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Context } from '../context';\nimport Header from '../components/Header';\nimport Searchbar from '../components/Searchbar';\nimport Footer from '../components/Footer';\nimport Loading from '../components/animation/Loading';\nimport RecipeCardsContainer from '../components/Cards/RecipeCardsContainer';\nimport getApiData, { EpAllRecipes, EpRecipesByIngredients } from '../services/apiRequest';\nimport CategoriesSelector from '../components/Selectors/CategoriesSelector';\n\nconst MainDrinks = () => {\n  const { hideSearchBar, apiData, filteredRecipes } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  const { filter } = useParams();\n\n  useEffect(() => {\n    hideSearchBar.set(true);\n\n    const request = filter\n      ? ['drink', EpRecipesByIngredients, filter]\n      : ['drink', EpAllRecipes];\n\n    getApiData(...request).then((data) => {\n      apiData.set(data);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Header\n        name=\"Bebidas\"\n        foodClass=\"main-drinks\"\n        Show\n      />\n      { !hideSearchBar.value && <Searchbar type=\"drink\" />}\n      {!loading && <CategoriesSelector recipeType=\"drink\" />}\n      { loading ? <Loading /> : <RecipeCardsContainer\n        cardsInfos={\n          filteredRecipes.value.length > 0\n            ? filteredRecipes.value\n            : apiData.value\n        }\n        cardType=\"drink\"\n        maxCards={ 12 }\n      />}\n\n      <Footer\n        foodClass=\"main-drinks-footer\"\n      />\n    </div>\n  );\n};\n\nexport default MainDrinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Button, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport './ButtonLink.css';\n\nconst ButtonLink = ({\n  func, LinkT, name, className, size, variant, color, type, datatest,\n}) => (\n  <Box m={ 0.25 }>\n    <Link to={ LinkT } className=\"text-link\">\n      <Button\n        className={ className }\n        size={ size }\n        variant={ variant }\n        color={ color }\n        type={ type }\n        data-testid={ datatest }\n        onClick={ func }\n      >\n        <Typography variant=\"button\">{name}</Typography>\n      </Button>\n    </Link>\n  </Box>\n);\n\nButtonLink.propTypes = {\n  LinkT: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  datatest: PropTypes.string.isRequired,\n  func: PropTypes.func,\n};\n\nButtonLink.defaultProps = {\n  func: () => {},\n};\n\nexport default ButtonLink;\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport ButtonLink from '../components/ButtonLink';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst Explorer = () => (\n  <div>\n    <Header\n      name=\"Explorar\"\n      foodClass=\"explorer\"\n      Show={ false }\n    />\n    <Grid className=\"Button-explorer\">\n      <ButtonLink\n        LinkT=\"/explorar/comidas\"\n        name=\"Explorar Comidas\"\n        className=\"SizeUp\"\n        size=\"large\"\n        variant=\"contained\"\n        color=\"secondary\"\n        href=\"#contained-buttons\"\n        type=\"button\"\n        datatest=\"explore-food\"\n      />\n      <ButtonLink\n        LinkT=\"/explorar/bebidas\"\n        name=\"Explorar Bebidas\"\n        className=\"SizeUp\"\n        size=\"large\"\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"button\"\n        datatest=\"explore-drinks\"\n      />\n    </Grid>\n    <Footer\n      foodClass=\"explorer-footer\"\n    />\n  </div>\n);\n\nexport default Explorer;\n","import React, { useContext } from 'react';\nimport { Grid, Button, Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport ButtonLink from './ButtonLink';\nimport { Context } from '../context';\n\nconst ExplorefoodsButton = () => {\n  const history = useHistory();\n  const { apiData } = useContext(Context);\n  return (\n    <div>\n      <Grid className=\"Button-explorer\">\n        <ButtonLink\n          LinkT=\"/explorar/comidas/ingredientes\"\n          name=\"Explorar Por Ingredientes\"\n          className=\"SizeUp\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"button\"\n          datatest=\"explore-by-ingredient\"\n        />\n\n        <ButtonLink\n          LinkT=\"/explorar/comidas/area\"\n          name=\"Por Local de Origem\"\n          className=\"SizeUp\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          href=\"#contained-buttons\"\n          type=\"button\"\n          datatest=\"explore-by-area\"\n        />\n        <Box m={ 0.25 }>\n          <Button\n            className=\"SizeUp\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"button\"\n            data-testid=\"explore-surprise\"\n            onClick={ () => history\n              .push(`/comidas/${apiData.value.map((item) => item.idMeal)}`) }\n          >\n            Me Surpreenda!\n          </Button>\n        </Box>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ExplorefoodsButton;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useState, useEffect } from 'react';\nimport Loading from '../components/animation/Loading';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { Context } from '../context';\nimport getApiData from '../services/apiRequest';\nimport ExplorefoodsButton from '../components/ExplorefoodsButton';\n\nconst ExplorerFods = () => {\n  const { apiData } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getApiData('food', 'random.php').then((data) => {\n      apiData.set(data);\n      setLoading(false);\n      console.log(apiData.value);\n    });\n  }, []);\n\n  return (\n\n    <div>\n      <Header\n        name=\"Explorar Comidas\"\n        foodClass=\"explorer-foods\"\n        Show={ false }\n      />\n      { loading ? <Loading />\n        : <ExplorefoodsButton />}\n\n      <Footer\n        foodClass=\"explorer-foods-footer\"\n      />\n    </div>\n  );\n};\n\nexport default ExplorerFods;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, Button, Box } from '@material-ui/core';\nimport ButtonLink from './ButtonLink';\nimport { Context } from '../context';\n\nconst ExploreDrinksButton = () => {\n  const history = useHistory();\n  const { apiData } = useContext(Context);\n\n  return (\n    <div>\n      <Grid className=\"Button-explorer\">\n        <ButtonLink\n          LinkT=\"/explorar/bebidas/ingredientes\"\n          name=\"Explorar Por Ingredientes\"\n          className=\"SizeUp\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"button\"\n          datatest=\"explore-by-ingredient\"\n        />\n        <Box m={ 0.25 }>\n          <Button\n            className=\"SizeUp\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"button\"\n            data-testid=\"explore-surprise\"\n            onClick={ () => history\n              .push(`/bebidas/${apiData.value.map((item) => item.idDrink)}`) }\n          >\n            Me Surpreenda!\n          </Button>\n        </Box>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ExploreDrinksButton;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useContext, useEffect } from 'react';\nimport Loading from '../components/animation/Loading';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { Context } from '../context';\nimport getApiData from '../services/apiRequest';\nimport ExploreDrinksButton from '../components/ExploreDrinksButton';\n\nconst ExplorerDrinks = () => {\n  const { apiData } = useContext(Context);\n  const [loading, setLoading] = useState('');\n  useEffect(() => {\n    getApiData('drink', 'random.php').then((data) => {\n      apiData.set(data);\n      setLoading(false);\n    });\n  }, []);\n  return (\n\n    <div>\n      <Header\n        name=\"Explorar Bebidas\"\n        foodClass=\"explorer-drinks\"\n        Show={ false }\n      />\n      { loading ? <Loading />\n        : <ExploreDrinksButton />}\n      <Footer\n        foodClass=\"explorer-drinks-footer\"\n      />\n    </div>\n  );\n};\n\nexport default ExplorerDrinks;\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeCard from '../RecipeCard';\nimport './styles.css';\n\nconst IngredientCardsContainer = ({ cardsInfos, cardType, maxCards }) => {\n  const cardTypes = {\n    food: {\n      ingredient: 'strIngredient',\n      URL: 'https://www.themealdb.com/images/ingredients/',\n      redirectPath: '/comidas/ingredientes/',\n    },\n    drink: {\n      ingredient: 'strIngredient1',\n      URL: 'https://www.thecocktaildb.com/images/ingredients/',\n      redirectPath: '/bebidas/ingredientes/',\n    },\n  };\n\n  const cardsToRender = () => {\n    if (!cardsInfos) return [];\n    if (cardsInfos.length > maxCards) return cardsInfos.slice(0, maxCards);\n    return cardsInfos;\n  };\n\n  const { ingredient, URL, redirectPath } = cardTypes[cardType];\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      className=\"ingredient-cards-container\"\n    >\n      {cardsToRender().map((card, index) => (\n\n        <RecipeCard\n          key={ card[ingredient] }\n          title={ card[ingredient] }\n          thumbnail={ `${URL}${card[ingredient]}-Small.png` }\n          index={ index }\n          cardType=\"ingredient\"\n          clickRedirectPath={ `${redirectPath}${card[ingredient]}` }\n        />\n      ))}\n    </Grid>\n  );\n};\n\nIngredientCardsContainer.propTypes = {\n  cardsInfos: PropTypes.arrayOf(PropTypes.object),\n  cardType: PropTypes.string.isRequired,\n  maxCards: PropTypes.number.isRequired,\n};\n\nIngredientCardsContainer.defaultProps = {\n  cardsInfos: [],\n};\n\nexport default IngredientCardsContainer;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport IngredientCardsContainer from '../../components/Cards/IngredientCardsContainer';\nimport getApiData, { EpIngredients } from '../../services/apiRequest';\nimport Loading from '../../components/animation/Loading';\nimport { Context } from '../../context';\n\nconst ExploreByIngredients = ({ drinksOrFoods }) => {\n  const REMOVE_S = -1;\n  const cardType = drinksOrFoods.slice(0, REMOVE_S);\n\n  const [loading, setLoading] = useState(true);\n  const { apiData } = useContext(Context);\n  useEffect(() => {\n    getApiData(cardType, EpIngredients).then((data) => {\n      apiData.set(data);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    loading\n      ? <Loading />\n      : (\n        <div>\n          <Header\n            name=\"Explorar Ingredientes\"\n            foodClass={ `explorer-${drinksOrFoods}-ingredients` }\n            Show={ false }\n          />\n          <IngredientCardsContainer\n            cardsInfos={ apiData.value }\n            cardType={ cardType }\n            maxCards={ 12 }\n          />\n\n          <Footer\n            foodClass={ `explorer-${drinksOrFoods}-ingredients-footer` }\n          />\n        </div>\n      )\n  );\n};\n\nExploreByIngredients.propTypes = {\n  drinksOrFoods: PropTypes.string.isRequired,\n};\n\nexport default ExploreByIngredients;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { FormControl, InputLabel } from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../context';\nimport getApiData,\n{ EpAllRecipes, EpRecipesByArea, EpRecipesByAreas } from '../services/apiRequest';\nimport './FormControl.css';\n\nconst CategoryDropDownSelector = ({ recipeType }) => {\n  const { apiName, filteredName, apiData } = useContext(Context);\n  const [currentFilterName, setcurrentFilterName] = useState('');\n  useEffect(() => {\n    getApiData(recipeType, EpRecipesByArea).then((data) => { apiName.set(data); });\n    return () => { apiName.set([]); };\n  }, [currentFilterName]);\n\n  const handleClick = (e) => {\n    if (e.target.textContent === currentFilterName || e.target.textContent === 'All') {\n      setcurrentFilterName('');\n      getApiData(recipeType, EpAllRecipes).then((data) => {\n        apiData.set(data);\n      });\n      filteredName.set([]);\n    } else {\n      setcurrentFilterName(e.target.textContent);\n      getApiData(recipeType, EpRecipesByAreas, e.target.textContent)\n        .then((data) => apiData.set(data));\n    }\n  };\n\n  return (\n    <FormControl className=\"formControl\" margin=\"dense\">\n      <InputLabel htmlFor=\"select\">Area</InputLabel>\n      <select\n        id=\"select\"\n        data-testid=\"explore-by-area-dropdown\"\n        value={ currentFilterName }\n        onChange={ (e) => setcurrentFilterName(e.target.value) }\n      >\n        <option\n          key=\"All\"\n          value=\"All\"\n          onClick={ handleClick }\n          data-testid=\"All-option\"\n        >\n          All\n        </option>\n        {apiName.value && apiName.value\n          .map(({ strArea }) => (\n            <option\n              key={ strArea }\n              value={ strArea }\n              onClick={ handleClick }\n              data-testid={ `${strArea}-option` }\n            >\n\n              {strArea}\n\n            </option>\n          ))}\n\n      </select>\n    </FormControl>\n\n  );\n};\n\nCategoryDropDownSelector.propTypes = {\n  recipeType: PropTypes.string.isRequired,\n};\n\nexport default CategoryDropDownSelector;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '../context';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Searchbar from '../components/Searchbar';\nimport getApiData from '../services/apiRequest';\nimport CategoryDropDownSelector from '../components/DropDown';\nimport Loading from '../components/animation/Loading';\nimport RecipeCardsContainer from '../components/Cards/RecipeCardsContainer';\n\nconst Origin = () => {\n  const { apiData, hideSearchBar, filteredName } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    hideSearchBar.set(true);\n    getApiData('food', 'search.php?s=').then((data) => {\n      apiData.set(data);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Header\n        name=\"Explorar Origem\"\n        foodClass=\"explorer-foods-origin \"\n        Show\n      />\n\n      { !hideSearchBar.value && <Searchbar type=\"food\" />}\n      {!loading && <CategoryDropDownSelector recipeType=\"food\" />}\n      { loading ? <Loading /> : (<RecipeCardsContainer\n        cardsInfos={\n          filteredName.value.length > 0\n            ? filteredName.value\n            : apiData.value\n        }\n        cardType=\"food\"\n        maxCards={ 12 }\n      />\n      )}\n      {/* <Searchbar /> */}\n      <Footer\n        foodClass=\"explorer-foods-origin-footer\"\n      />\n    </div>\n  );\n};\n\nexport default Origin;\n","import { Box, Paper, Typography } from '@material-ui/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallHolder.css';\n\nconst SmallHolder = ({ className, name }) => (\n  <div>\n    <Box\n      component=\"span\"\n      color=\"primary\"\n      direction=\"row\"\n      justify=\"space-around\"\n      alignItems=\"center\"\n    >\n      <Paper display=\"inline\" className={ className }>\n        <Typography variant=\"button\" data-testid=\"profile-email\">{name}</Typography>\n      </Paper>\n    </Box>\n  </div>\n);\n\nSmallHolder.propTypes = {\n  className: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default SmallHolder;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport SmallHolder from '../components/SmallHolder';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport ButtonLink from '../components/ButtonLink';\nimport { getUserEmail } from '../services/localStorage';\n\nconst Profile = () => {\n  const user = getUserEmail();\n\n  return (\n    <div>\n      <Header\n        name=\"Perfil\"\n        foodClass=\"Profile\"\n        Show={ false }\n      />\n      <SmallHolder\n        name={ user }\n        className=\"main\"\n      />\n\n      <Grid className=\"Button-explorer\">\n        <ButtonLink\n          LinkT=\"/receitas-feitas\"\n          name=\"Receitas Feitas\"\n          className=\"SizeUp\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"inherit\"\n          href=\"#contained-buttons\"\n          type=\"button\"\n          datatest=\"profile-done-btn\"\n        />\n\n        <ButtonLink\n          LinkT=\"/receitas-favoritas\"\n          name=\"Receitas Favoritas\"\n          className=\"SizeUp\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"inherit\"\n          href=\"#contained-buttons\"\n          type=\"button\"\n          datatest=\"profile-favorite-btn\"\n        />\n      </Grid>\n      <Grid className=\"Button-Logout\">\n        <ButtonLink\n          LinkT=\"/\"\n          className=\"SizeDown\"\n          name=\"Sair\"\n          size=\"small\"\n          variant=\"contained\"\n          color=\"secondary\"\n          href=\"#contained-buttons\"\n          type=\"button\"\n          datatest=\"profile-logout-btn\"\n          func={ () => localStorage.clear() }\n        />\n      </Grid>\n      <Footer\n        foodClass=\"Profile-footer\"\n      />\n    </div>\n  );\n};\n\nexport default Profile;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Grid from '@material-ui/core/Grid';\n\nimport ActiveButtons from '../../lib/ActiveButtons';\n\nconst Filter = ({ updateState, type }) => {\n  const handleActiveButtons = new ActiveButtons('.MuiButtonGroup-root', type);\n\n  useEffect(() => {\n    handleActiveButtons.init();\n  }, []);\n\n  const handleClick = (evt, filterContent) => {\n    updateState(filterContent);\n    handleActiveButtons.onClick(evt);\n  };\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\" className=\"done-recipes-filter\">\n      <ButtonGroup variant=\"contained\" fullWidth>\n        <Button onClick={ (evt) => handleClick(evt, '') } data-testid=\"filter-by-all-btn\">\n          All\n        </Button>\n        <Button\n          onClick={ (evt) => handleClick(evt, 'comida') }\n          data-testid=\"filter-by-food-btn\"\n        >\n          Food\n        </Button>\n        <Button\n          onClick={ (evt) => handleClick(evt, 'bebida') }\n          data-testid=\"filter-by-drink-btn\"\n        >\n          Drinks\n        </Button>\n      </ButtonGroup>\n    </Grid>\n  );\n};\n\nFilter.propTypes = {\n  updateState: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Card, CardContent, CardMedia, Chip,\n  Grid, IconButton, Typography, Collapse } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nimport './styles.css';\nimport shareIcon from '../../images/shareIcon.svg';\n\nconst TWO_SECONDS = 2000;\n\nconst DoneRecipe = ({ recipe, index }) => {\n  const history = useHistory();\n  const [showAlert, setShowAlert] = useState(false);\n  const { id, name, type, area, category,\n    image, doneDate, tags, alcoholicOrNot } = recipe;\n\n  const recipePath = `/${type}s/${id}`;\n\n  const pushToRecipePath = () => history.push(recipePath);\n\n  const topText = () => {\n    if (type === 'comida') {\n      if (category && area) return `${area} - ${category}`;\n      if (category) return `${category}`;\n      return `${area}`;\n    }\n    return `${alcoholicOrNot}`;\n  };\n\n  const nameAndCategoryComponent = () => (\n    <Grid item xs={ 10 }>\n      <Typography\n        variant=\"body2\"\n        data-testid={ `${index}-horizontal-top-text` }\n        color=\"textSecondary\"\n        gutterBottom\n      >\n        { `${topText()}` }\n      </Typography>\n      <Typography\n        variant=\"body1\"\n        data-testid={ `${index}-horizontal-name` }\n        color=\"textPrimary\"\n        onClick={ pushToRecipePath }\n        gutterBottom\n      >\n        { `${name}` }\n      </Typography>\n    </Grid>\n  );\n\n  const copyToClipBoard = () => {\n    const { protocol, host } = window.location;\n    navigator.clipboard.writeText(`${protocol}//${host}${recipePath}`);\n    setShowAlert(true);\n    setTimeout(() => setShowAlert(false), TWO_SECONDS);\n  };\n\n  const shareIconComponent = () => (\n    <Grid item xs={ 2 }>\n      <IconButton onClick={ copyToClipBoard }>\n        <img\n          src={ shareIcon }\n          alt=\"share icon\"\n          data-testid={ `${index}-horizontal-share-btn` }\n          style={ { width: '22px' } }\n        />\n      </IconButton>\n    </Grid>\n  );\n\n  return (\n    <Grid item xs={ 12 } sm={ 6 } md={ 4 } lg={ 3 }>\n      <Card style={ { display: 'flex' } }>\n        <CardMedia\n          data-testid={ `${index}-horizontal-image` }\n          component=\"img\"\n          image={ image }\n          title={ name }\n          style={ { maxWidth: '50%' } }\n          onClick={ pushToRecipePath }\n        />\n        <CardContent className=\"done-recipe-content\">\n          <Grid container justify=\"space-around\">\n            { nameAndCategoryComponent() }\n            { shareIconComponent() }\n          </Grid>\n          <Typography variant=\"body2\" data-testid={ `${index}-horizontal-done-date` }>\n            { `Feita em: ${doneDate}` }\n          </Typography>\n          <Grid container wrap=\"wrap\">\n            { tags.filter((tag, tagIndex) => tagIndex < 2)\n              .map((tag) => (\n                <Chip\n                  key={ tag }\n                  label={ tag }\n                  data-testid={ `${index}-${tag}-horizontal-tag` }\n                  style={ { margin: '6px 6px 0 0' } }\n                />\n              )) }\n          </Grid>\n        </CardContent>\n      </Card>\n      <Collapse in={ showAlert } className=\"copy-to-clip-board-alert\">\n        <Alert onClose={ () => {} }>\n          Link copiado!\n        </Alert>\n      </Collapse>\n      {/* { showAlert && (\n        <Alert onClose={ () => {} }>\n          Link copiado!\n        </Alert>) } */}\n    </Grid>\n  );\n};\n\nDoneRecipe.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    doneDate: PropTypes.string.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\nexport default DoneRecipe;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Card, CardContent, CardMedia,\n  Grid, IconButton, Typography, Collapse } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nimport './styles.css';\nimport shareIcon from '../../images/shareIcon.svg';\nimport favIcon from '../../images/blackHeartIcon.svg';\n\nconst TWO_SECONDS = 2000;\n\nconst FavRecipe = ({ recipe, index }) => {\n  const history = useHistory();\n  const [showAlert, setShowAlert] = useState(false);\n  const { id, name, type, area, category,\n    image, alcoholicOrNot, removeFav } = recipe;\n\n  const recipePath = `/${type}s/${id}`;\n\n  const pushToRecipePath = () => history.push(recipePath);\n\n  const topText = () => {\n    if (type === 'comida') {\n      if (category && area) return `${area} - ${category}`;\n      if (category) return `${category}`;\n      return `${area}`;\n    }\n    return `${alcoholicOrNot}`;\n  };\n\n  const nameAndCategoryComponent = () => (\n    <Grid item xs={ 12 }>\n      <Typography\n        variant=\"body2\"\n        data-testid={ `${index}-horizontal-top-text` }\n        color=\"textSecondary\"\n        gutterBottom\n      >\n        { `${topText()}` }\n      </Typography>\n      <Typography\n        variant=\"body1\"\n        data-testid={ `${index}-horizontal-name` }\n        color=\"textPrimary\"\n        onClick={ pushToRecipePath }\n        gutterBottom\n      >\n        { `${name}` }\n      </Typography>\n    </Grid>\n  );\n\n  const copyToClipBoard = () => {\n    const { protocol, host } = window.location;\n    navigator.clipboard.writeText(`${protocol}//${host}${recipePath}`);\n    setShowAlert(true);\n    setTimeout(() => setShowAlert(false), TWO_SECONDS);\n  };\n\n  const shareIconComponent = () => (\n    <IconButton onClick={ copyToClipBoard }>\n      <img\n        src={ shareIcon }\n        alt=\"share icon\"\n        data-testid={ `${index}-horizontal-share-btn` }\n        style={ { width: '22px' } }\n      />\n    </IconButton>\n  );\n\n  const favIconComponent = () => (\n    <IconButton onClick={ () => removeFav(id) }>\n      <img\n        src={ favIcon }\n        alt=\"favorited icon\"\n        data-testid={ `${index}-horizontal-favorite-btn` }\n        style={ { width: '22px' } }\n      />\n    </IconButton>\n  );\n\n  return (\n    <Grid item xs={ 12 } sm={ 6 } md={ 4 } lg={ 3 }>\n      <Card style={ { display: 'flex' } }>\n        <CardMedia\n          data-testid={ `${index}-horizontal-image` }\n          component=\"img\"\n          image={ image }\n          title={ name }\n          style={ { maxWidth: '50%' } }\n          onClick={ pushToRecipePath }\n        />\n        <CardContent className=\"done-recipe-content\">\n          { nameAndCategoryComponent() }\n          <Grid container item xs={ 12 } justify=\"space-around\">\n            { shareIconComponent() }\n            { favIconComponent() }\n          </Grid>\n        </CardContent>\n      </Card>\n      <Collapse in={ showAlert } className=\"copy-to-clip-board-alert\">\n        <Alert onClose={ () => {} }>\n          Link copiado!\n        </Alert>\n      </Collapse>\n    </Grid>\n  );\n};\n\nFavRecipe.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    removeFav: PropTypes.func.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\nexport default FavRecipe;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport DoneRecipe from './DoneRecipe';\nimport FavRecipe from './FavRecipe';\n\nconst RecipesContainer = ({ type, recipes, filter, removeFav }) => {\n  const filteredRecipes = recipes.filter((recipe) => recipe.type.includes(filter));\n  const updatedRecipes = filteredRecipes.map((recipe) => ({ ...recipe, removeFav }));\n\n  const Recipe = type === 'done' ? DoneRecipe : FavRecipe;\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      wrap=\"wrap\"\n      spacing={ 2 }\n    >\n      {updatedRecipes.map((recipe, index) => (\n        <Recipe\n          key={ recipe.id }\n          recipe={ recipe }\n          index={ index }\n        />\n      ))}\n    </Grid>\n  );\n};\n\nRecipesContainer.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object),\n  filter: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  removeFav: PropTypes.func,\n};\n\nRecipesContainer.defaultProps = {\n  recipes: [],\n  removeFav: () => {},\n};\n\nexport default RecipesContainer;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Header from '../components/Header';\nimport { Filter, RecipesContainer } from '../components/DoneAndFavRecipes';\nimport { getDoneRecipes } from '../services/localStorage';\n\nconst RecipesDone = () => {\n  const doneRecipes = getDoneRecipes();\n  const [filter, setFilter] = useState('');\n  return (\n    <Grid container direction=\"column\">\n      <Header\n        name=\"Receitas Feitas\"\n        foodClass=\"Recipes-Done\"\n        Show={ false }\n      />\n      <Filter updateState={ setFilter } type=\"done\" />\n      <RecipesContainer type=\"done\" recipes={ doneRecipes } filter={ filter } />\n    </Grid>\n  );\n};\n\nexport default RecipesDone;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport Header from '../components/Header';\nimport { Filter, RecipesContainer } from '../components/DoneAndFavRecipes';\nimport { getFavoriteRecipes, removeFavoritedRecipe } from '../services/localStorage';\n\nconst RecipesFav = () => {\n  const favRecipes = getFavoriteRecipes();\n  const [favoriteRecipes, setFavoriteRecipes] = useState(favRecipes);\n  const [filter, setFilter] = useState('');\n\n  const removeFavRecipeById = (id) => {\n    const updatedFavRecipes = favoriteRecipes.filter((recipe) => recipe.id !== id);\n    setFavoriteRecipes(updatedFavRecipes);\n    removeFavoritedRecipe(id);\n  };\n\n  return (\n    <Grid container direction=\"column\">\n      <Header\n        name=\"Receitas Favoritas\"\n        foodClass=\"Recipes-Fav\"\n        Show={ false }\n      />\n      <Filter updateState={ setFilter } type=\"fav\" />\n      <RecipesContainer\n        type=\"favorite\"\n        recipes={ favoriteRecipes }\n        filter={ filter }\n        removeFav={ removeFavRecipeById }\n      />\n    </Grid>\n  );\n};\n\nexport default RecipesFav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst RecomendationsCarousel = ({ recomendations }) => (\n  <section>\n    <div\n      className=\"container\"\n    >\n      {recomendations.map((receipe, index) => (\n        <div\n          className=\"slide\"\n          key={ receipe.idDrink ? receipe.idDrink : receipe.strMeal }\n          data-testid={ `${index}-recomendation-card` }\n        >\n          <img\n            src={ receipe.strDrinkThumb\n              ? receipe.strDrinkThumb\n              : receipe.strMealThumb }\n            alt={ receipe.strDrink ? receipe.strDrink : receipe.strMeal }\n            className=\"recipe-photo\"\n          />\n          <h2\n            data-testid={ `${index}-recomendation-title` }\n          >\n            { receipe.strDrink ? receipe.strDrink : receipe.strMeal }\n          </h2>\n        </div>\n      ))}\n    </div>\n  </section>\n);\n\nRecomendationsCarousel.propTypes = {\n  recomendations: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default RecomendationsCarousel;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport {\n  checkFavoriteRecipes,\n  saveFavoriteRecipe,\n  removeFavoritedRecipe,\n} from '../../services/localStorage';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nconst FavoriteButton = ({ id, recipe, type }) => {\n  const [favorited, setFavorited] = useState(false);\n\n  useEffect(() => {\n    if (checkFavoriteRecipes(type, id)) setFavorited(true);\n  }, [favorited]);\n\n  return (\n    <div>\n      {favorited\n        ? (\n          <Button\n            onClick={ () => {\n              setFavorited(false);\n              removeFavoritedRecipe(id);\n            } }\n          >\n            <img\n              src={ blackHeartIcon }\n              style={ { width: 20 } }\n              alt=\"black heart\"\n              data-testid=\"favorite-btn\"\n            />\n          </Button>\n        )\n        : (\n          <Button\n            onClick={ () => {\n              setFavorited(true);\n              saveFavoriteRecipe(recipe);\n            } }\n          >\n            <img\n              src={ whiteHeartIcon }\n              style={ { width: 20 } }\n              alt=\"white heart\"\n              data-testid=\"favorite-btn\"\n            />\n          </Button>\n        )}\n    </div>\n  );\n};\n\nFavoriteButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  recipe: PropTypes.shape({}).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default FavoriteButton;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  AppBar,\n  Button,\n} from '@material-ui/core';\nimport {\n  Share as ShareIcon,\n} from '@material-ui/icons';\nimport RecomendationsCarousel from '../../components/RecomendationsCarousel';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport Loading from '../../components/animation/Loading';\nimport {\n  checkDoneRecipes,\n  checkProgressRecipes,\n} from '../../services/localStorage';\n\nimport './styles.css';\n\nconst DetailsFood = () => {\n  const NUMBER_OF_RECOMENDATIONS = 6;\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [recipeDetails, setRecipeDetails] = useState('');\n  const [recomendations, setRecomendations] = useState([]);\n  const [bottomButtonText, setBottomButtonText] = useState('Iniciar receita');\n  const [copiedLink, setCopiedLink] = useState(false);\n\n  const recipeDetailsURL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n  const drinksURL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n\n  const fetchData = async (url, callback) => {\n    const results = await fetch(url)\n      .then((response) => response.json())\n      .then((data) => data);\n    callback(results);\n  };\n\n  useEffect(() => {\n    fetchData(recipeDetailsURL, (results) => setRecipeDetails(results.meals[0]));\n  }, []);\n  useEffect(() => {\n    fetchData(drinksURL, (results) => setRecomendations(\n      results.drinks.slice(0, NUMBER_OF_RECOMENDATIONS),\n    ));\n  }, []);\n  useEffect(() => {\n    if (checkDoneRecipes('comida', id)) setBottomButtonText('');\n    else if (checkProgressRecipes('meal', id)) setBottomButtonText('Continuar Receita');\n  }, []);\n\n  const ingredientsList = () => {\n    const MAX_NUMBER_OF_INGREDIENTS = 20;\n    const arrayOfIngredients = [];\n    for (let index = 1; index <= MAX_NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayOfIngredients.push(\n        {\n          ingredient: recipeDetails[`strIngredient${index}`],\n          measure: recipeDetails[`strMeasure${index}`],\n        },\n      );\n    }\n    const filtered = arrayOfIngredients.filter((prop) => prop.ingredient);\n    return filtered;\n  };\n\n  const embedVideoLink = (link) => {\n    const videoId = link.split('v=')[1];\n    const embedSrc = `https://www.youtube.com/embed/${videoId}`;\n    return embedSrc;\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item xs={ 12 }>\n        {(recipeDetails && recomendations)\n          ? (\n            <Card>\n              <CardContent>\n                <img\n                  src={ recipeDetails.strMealThumb }\n                  alt={ recipeDetails.idMeal }\n                  data-testid=\"recipe-photo\"\n                  className=\"recipe-photo\"\n                />\n                <Typography data-testid=\"recipe-title\">\n                  {recipeDetails.strMeal}\n                </Typography>\n                <Typography data-testid=\"recipe-category\">\n                  {recipeDetails.strCategory}\n                </Typography>\n                <FavoriteButton id={ id } recipe={ recipeDetails } type=\"comida\" />\n                <Button\n                  data-testid=\"share-btn\"\n                  onClick={ () => {\n                    navigator.clipboard.writeText(window.location.href);\n                    setCopiedLink(true);\n                  } }\n                >\n                  <ShareIcon />\n                  {copiedLink ? <span>Link copiado!</span> : null}\n                </Button>\n                <List>\n                  { ingredientsList().map((ingredientAndMeasure, index) => (\n                    <ListItem key={ index }>\n                      <ListItemText\n                        primary={ ingredientAndMeasure.ingredient }\n                        secondary={ ingredientAndMeasure.measure }\n                        data-testid={ `${index}-ingredient-name-and-measure` }\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n                <Typography data-testid=\"instructions\">\n                  {recipeDetails.strInstructions}\n                </Typography>\n                <CardMedia\n                  component=\"iframe\"\n                  src={ embedVideoLink(recipeDetails.strYoutube) }\n                  data-testid=\"video\"\n                />\n                { recomendations\n                  ? <RecomendationsCarousel recomendations={ recomendations } />\n                  : <p>Loading</p> }\n                {bottomButtonText\n                  ? (\n                    <AppBar\n                      data-testid=\"start-recipe-btn\"\n                      position=\"fixed\"\n                      color=\"primary\"\n                      style={ { top: 'auto',\n                        bottom: 0 } }\n                    >\n                      <Button\n                        variant=\"contained\"\n                        onClick={ () => history.push(`/comidas/${id}/in-progress`) }\n                      >\n                        {bottomButtonText}\n                      </Button>\n                    </AppBar>)\n                  : null}\n              </CardContent>\n            </Card>)\n          : <Loading /> }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DetailsFood;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  AppBar,\n  Button,\n} from '@material-ui/core';\nimport {\n  Share as ShareIcon,\n} from '@material-ui/icons';\nimport RecomendationsCarousel from '../../components/RecomendationsCarousel';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport Loading from '../../components/animation/Loading';\nimport {\n  checkDoneRecipes,\n  checkProgressRecipes,\n} from '../../services/localStorage';\n\nconst DetailsDrink = () => {\n  const NUMBER_OF_RECOMENDATIONS = 6;\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [recipeDetails, setRecipeDetails] = useState('');\n  const [recomendations, setRecomendations] = useState([]);\n  const [bottomButtonText, setBottomButtonText] = useState('Iniciar receita');\n  const [copiedLink, setCopiedLink] = useState(false);\n\n  const recipeDetailsURL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n  const mealsURL = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n\n  const fetchData = async (url, callback) => {\n    const results = await fetch(url)\n      .then((response) => response.json())\n      .then((data) => data);\n    callback(results);\n  };\n\n  useEffect(() => {\n    fetchData(recipeDetailsURL, (results) => setRecipeDetails(results.drinks[0]));\n  }, []);\n  useEffect(() => {\n    fetchData(mealsURL, (results) => setRecomendations(\n      results.meals.slice(0, NUMBER_OF_RECOMENDATIONS),\n    ));\n  }, []);\n  useEffect(() => {\n    if (checkDoneRecipes('bebida', id)) setBottomButtonText('');\n    else if (checkProgressRecipes('cocktail', id)) {\n      setBottomButtonText('Continuar Receita');\n    }\n  }, []);\n\n  const ingredientsList = () => {\n    const MAX_NUMBER_OF_INGREDIENTS = 20;\n    const arrayOfIngredients = [];\n    for (let index = 1; index <= MAX_NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayOfIngredients.push(\n        {\n          ingredient: recipeDetails[`strIngredient${index}`],\n          measure: recipeDetails[`strMeasure${index}`],\n        },\n      );\n    }\n    const filtered = arrayOfIngredients.filter((prop) => prop.ingredient);\n    return filtered;\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item xs={ 12 }>\n        {recipeDetails\n          ? (\n            <Card>\n              <CardContent>\n                <img\n                  src={ recipeDetails.strDrinkThumb }\n                  alt={ recipeDetails.idDrink }\n                  data-testid=\"recipe-photo\"\n                  className=\"recipe-photo\"\n                />\n                <Typography data-testid=\"recipe-title\">\n                  {recipeDetails.strDrink}\n                </Typography>\n                <Typography data-testid=\"recipe-category\">\n                  {recipeDetails.strAlcoholic}\n                </Typography>\n                <FavoriteButton id={ id } recipe={ recipeDetails } type=\"bebida\" />\n                <Button\n                  data-testid=\"share-btn\"\n                  onClick={ () => {\n                    navigator.clipboard.writeText(window.location.href);\n                    setCopiedLink(true);\n                  } }\n                >\n                  <ShareIcon />\n                  {copiedLink ? <span>Link copiado!</span> : null}\n                </Button>\n                <List>\n                  { ingredientsList().map((ingredientAndMeasure, index) => (\n                    <ListItem key={ index }>\n                      <ListItemText\n                        primary={ ingredientAndMeasure.ingredient }\n                        secondary={ ingredientAndMeasure.measure }\n                        data-testid={ `${index}-ingredient-name-and-measure` }\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n                <Typography data-testid=\"instructions\">\n                  {recipeDetails.strInstructions}\n                </Typography>\n                { recomendations\n                  ? <RecomendationsCarousel recomendations={ recomendations } />\n                  : <p>Loading</p> }\n                {bottomButtonText\n                  ? (\n                    <AppBar\n                      data-testid=\"start-recipe-btn\"\n                      position=\"fixed\"\n                      color=\"primary\"\n                      style={ { top: 'auto', bottom: 0 } }\n                    >\n                      <Button\n                        variant=\"contained\"\n                        onClick={ () => history.push(`/bebidas/${id}/in-progress`) }\n                      >\n                        {bottomButtonText}\n                      </Button>\n                    </AppBar>)\n                  : null}\n              </CardContent>\n            </Card>)\n          : <Loading /> }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DetailsDrink;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  List,\n  Checkbox,\n  ListItem,\n  ListItemText,\n  Button,\n} from '@material-ui/core';\nimport {\n  Share as ShareIcon,\n} from '@material-ui/icons';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport Loading from '../../components/animation/Loading';\nimport {\n  updateInProgressRecipe,\n  getInProcessRecipe,\n  saveDoneRecipe,\n} from '../../services/localStorage';\n\nconst FoodInProgress = () => {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [recipeDetails, setRecipeDetails] = useState('');\n  const [copiedLink, setCopiedLink] = useState(false);\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const [finishButton, setFinishButton] = useState(true);\n\n  const recipeDetailsURL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n\n  const fetchData = async (url, callback) => {\n    const results = await fetch(url)\n      .then((response) => response.json())\n      .then((data) => data);\n    callback(results);\n  };\n\n  const ingredientsList = () => {\n    const MAX_NUMBER_OF_INGREDIENTS = 20;\n    const arrayOfIngredients = [];\n    for (let index = 1; index <= MAX_NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayOfIngredients.push(\n        {\n          ingredient: recipeDetails[`strIngredient${index}`],\n          measure: recipeDetails[`strMeasure${index}`],\n        },\n      );\n    }\n    const filtered = arrayOfIngredients.filter((prop) => prop.ingredient);\n    return filtered;\n  };\n\n  const handleCheckboxIngredients = (ingredient) => {\n    updateInProgressRecipe('meals', id, ingredient);\n    if (usedIngredients.includes(ingredient)) {\n      setUsedIngredients(usedIngredients.filter((item) => item !== ingredient));\n    } else {\n      setUsedIngredients([...usedIngredients, ingredient]);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(recipeDetailsURL, (results) => setRecipeDetails(results.meals[0]));\n  }, []);\n  useEffect(() => {\n    setUsedIngredients(getInProcessRecipe('meals', id));\n  }, []);\n  useEffect(() => {\n    if (getInProcessRecipe('meals', id).length === ingredientsList().length) {\n      setFinishButton(false);\n    } else setFinishButton(true);\n  }, [recipeDetails, usedIngredients]);\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item xs={ 12 }>\n        {recipeDetails\n          ? (\n            <Card>\n              <CardContent>\n                <img\n                  src={ recipeDetails.strMealThumb }\n                  alt={ recipeDetails.idMeal }\n                  data-testid=\"recipe-photo\"\n                  className=\"recipe-photo\"\n                />\n                <Typography data-testid=\"recipe-title\">\n                  {recipeDetails.strMeal}\n                </Typography>\n                <Typography data-testid=\"recipe-category\">\n                  {recipeDetails.strCategory}\n                </Typography>\n                <FavoriteButton id={ id } recipe={ recipeDetails } type=\"comida\" />\n                <Button\n                  data-testid=\"share-btn\"\n                  onClick={ () => {\n                    navigator.clipboard.writeText(\n                      window.location.href.replace(/\\/in-progress/, ''),\n                    );\n                    setCopiedLink(true);\n                  } }\n                >\n                  <ShareIcon />\n                  {copiedLink ? <span>Link copiado!</span> : null}\n                </Button>\n                <List>\n                  { ingredientsList().map((ingredientAndMeasure, index) => (\n                    <ListItem key={ index } data-testid={ `${index}-ingredient-step` }>\n                      <Checkbox\n                        checked={\n                          usedIngredients.includes(ingredientAndMeasure.ingredient)\n                        }\n                        color=\"default\"\n                        onChange={\n                          () => handleCheckboxIngredients(ingredientAndMeasure.ingredient)\n                        }\n                        inputProps={ { 'aria-label': 'checkbox with default color' } }\n                      />\n                      <ListItemText\n                        primary={ ingredientAndMeasure.ingredient }\n                        secondary={ ingredientAndMeasure.measure }\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n                <Typography data-testid=\"instructions\">\n                  {recipeDetails.strInstructions}\n                </Typography>\n                <Button\n                  disabled={ finishButton }\n                  variant=\"contained\"\n                  data-testid=\"finish-recipe-btn\"\n                  onClick={ () => {\n                    history.push('/receitas-feitas');\n                    saveDoneRecipe(recipeDetails);\n                  } }\n                >\n                  Finalizar receita\n                </Button>\n              </CardContent>\n            </Card>)\n          : <Loading /> }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FoodInProgress;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  List,\n  Checkbox,\n  ListItem,\n  ListItemText,\n  Button,\n} from '@material-ui/core';\nimport {\n  Share as ShareIcon,\n} from '@material-ui/icons';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport Loading from '../../components/animation/Loading';\nimport {\n  updateInProgressRecipe,\n  getInProcessRecipe,\n  saveDoneRecipe,\n} from '../../services/localStorage';\n\nconst FoodInProgress = () => {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [recipeDetails, setRecipeDetails] = useState('');\n  const [copiedLink, setCopiedLink] = useState(false);\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const [finishButton, setFinishButton] = useState(true);\n\n  const recipeDetailsURL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n\n  const fetchData = async (url, callback) => {\n    const results = await fetch(url)\n      .then((response) => response.json())\n      .then((data) => data);\n    callback(results);\n  };\n\n  const ingredientsList = () => {\n    const MAX_NUMBER_OF_INGREDIENTS = 20;\n    const arrayOfIngredients = [];\n    for (let index = 1; index <= MAX_NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayOfIngredients.push(\n        {\n          ingredient: recipeDetails[`strIngredient${index}`],\n          measure: recipeDetails[`strMeasure${index}`],\n        },\n      );\n    }\n    const filtered = arrayOfIngredients.filter((prop) => prop.ingredient);\n    return filtered;\n  };\n\n  const handleCheckboxIngredients = (ingredient) => {\n    updateInProgressRecipe('cocktails', id, ingredient);\n    if (usedIngredients.includes(ingredient)) {\n      setUsedIngredients(usedIngredients.filter((item) => item !== ingredient));\n    } else {\n      setUsedIngredients([...usedIngredients, ingredient]);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(recipeDetailsURL, (results) => setRecipeDetails(results.drinks[0]));\n  }, []);\n  useEffect(() => {\n    setUsedIngredients(getInProcessRecipe('cocktails', id));\n  }, []);\n  useEffect(() => {\n    if (getInProcessRecipe('cocktails', id).length === ingredientsList().length) {\n      setFinishButton(false);\n    } else setFinishButton(true);\n  }, [recipeDetails, usedIngredients]);\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item xs={ 12 }>\n        {recipeDetails\n          ? (\n            <Card>\n              <CardContent>\n                <img\n                  src={ recipeDetails.strDrinkThumb }\n                  alt={ recipeDetails.idDrink }\n                  data-testid=\"recipe-photo\"\n                  className=\"recipe-photo\"\n                />\n                <Typography data-testid=\"recipe-title\">\n                  {recipeDetails.strDrink}\n                </Typography>\n                <Typography data-testid=\"recipe-category\">\n                  {recipeDetails.strCategory}\n                </Typography>\n                <FavoriteButton id={ id } recipe={ recipeDetails } type=\"bebida\" />\n                <Button\n                  data-testid=\"share-btn\"\n                  onClick={ () => {\n                    navigator.clipboard.writeText(\n                      window.location.href.replace(/\\/in-progress/, ''),\n                    );\n                    setCopiedLink(true);\n                  } }\n                >\n                  <ShareIcon />\n                  {copiedLink ? <span>Link copiado!</span> : null}\n                </Button>\n                <List>\n                  { ingredientsList().map((ingredientAndMeasure, index) => (\n                    <ListItem key={ index } data-testid={ `${index}-ingredient-step` }>\n                      <Checkbox\n                        checked={\n                          usedIngredients.includes(ingredientAndMeasure.ingredient)\n                        }\n                        color=\"default\"\n                        onChange={\n                          () => handleCheckboxIngredients(ingredientAndMeasure.ingredient)\n                        }\n                        inputProps={ { 'aria-label': 'checkbox with default color' } }\n                      />\n                      <ListItemText\n                        primary={ ingredientAndMeasure.ingredient }\n                        secondary={ ingredientAndMeasure.measure }\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n                <Typography data-testid=\"instructions\">\n                  {recipeDetails.strInstructions}\n                </Typography>\n                <Button\n                  disabled={ finishButton }\n                  variant=\"contained\"\n                  data-testid=\"finish-recipe-btn\"\n                  onClick={ () => {\n                    history.push('/receitas-feitas');\n                    saveDoneRecipe(recipeDetails);\n                  } }\n\n                >\n                  Finalizar receita\n                </Button>\n              </CardContent>\n            </Card>)\n          : <Loading /> }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FoodInProgress;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ConxtextProvider from './context';\nimport './App.css';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport MainFoods from './pages/MainFoods';\nimport MainDrinks from './pages/MainDrinks';\nimport Explorer from './pages/Explorer';\nimport ExplorerFods from './pages/ExplorerFods';\nimport ExplorerDrinks from './pages/ExplorerDrinks';\nimport ExploreByIngredients from './pages/ExploreByIngredients';\nimport Origin from './pages/Origin';\nimport Profile from './pages/Profile';\nimport RecipesDone from './pages/RecipesDone';\nimport RecipesFav from './pages/RecipesFav';\nimport DetailsFood from './pages/DetailsFood';\nimport DetailsDrink from './pages/DetailsDrink';\nimport FoodInProgress from './pages/FoodInProgress';\nimport DrinkInProgress from './pages/DrinkInProgress';\n\nfunction App() {\n  return (\n    <ConxtextProvider>\n      <Switch>\n        <Route exact path=\"/explorar/comidas/ingredientes\">\n          <ExploreByIngredients drinksOrFoods=\"foods\" />\n        </Route>\n        <Route exact path=\"/explorar/bebidas/ingredientes\">\n          <ExploreByIngredients drinksOrFoods=\"drinks\" />\n        </Route>\n        <Route path=\"/comidas/ingredientes/:filter\" component={ MainFoods } />\n        <Route path=\"/bebidas/ingredientes/:filter\" component={ MainDrinks } />\n        <Route path=\"/explorar/bebidas/area\" component={ NotFound } />\n        <Route exact path=\"/explorar/comidas/area\" component={ Origin } />\n        <Route exact path=\"/explorar/comidas\" component={ ExplorerFods } />\n        <Route path=\"/explorar/bebidas\" component={ ExplorerDrinks } />\n        <Route path=\"/explorar\" component={ Explorer } />\n        <Route path=\"/comidas/:id/in-progress\" component={ FoodInProgress } />\n        <Route path=\"/bebidas/:id/in-progress\" component={ DrinkInProgress } />\n        <Route path=\"/comidas/:id\" component={ DetailsFood } />\n        <Route path=\"/bebidas/:id\" component={ DetailsDrink } />\n        <Route path=\"/comidas/\" component={ MainFoods } />\n        <Route path=\"/bebidas/\" component={ MainDrinks } />\n        <Route path=\"/receitas-feitas\" component={ RecipesDone } />\n        <Route path=\"/receitas-favoritas\" component={ RecipesFav } />\n        <Route path=\"/perfil\" component={ Profile } />\n        <Route path=\"/\" component={ Login } />\n      </Switch>\n    </ConxtextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2ebd64c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/NotfoundIcon.c3e8b20a.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.75040d69.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";"],"sourceRoot":""}